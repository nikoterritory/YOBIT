import requests
import time
from urllib.parse import urlencode
from Config import API_KEY_F, API_SECRET_F, API_KEY, API_SECRET
import hmac
import hashlib


def get_info():
    values = dict()
    values["method"] = "getInfo"
    values["nonce"] = str(int(time.time()) - 1628365000)

    body = urlencode(values).encode("utf-8")
    sign = hmac.new(API_SECRET_F.encode("utf-8"), body, hashlib.sha512).hexdigest()

    headers = {
        "key": API_KEY_F,
        "sign": sign
    }
    response = requests.post(url="https://yobit.net/tapi", headers=headers, data=values)
    return response.json()

    print(get_info())

def get_deposit(coin_name="btc"):
    values = dict()
    values["method"] = "GetDepositAddress",
    values["coinName"] = coin_name,
    values["need_new"] = 0,
    values["nonce"] = str(int(time.time()) - 1628365000)

    body = urlencode(values).encode("utf-8")
    sign = hmac.new(API_SECRET_F.encode("utf-8"), body, hashlib.sha512).hexdigest()

    headers = {
        "key": API_KEY_F,
        "sign": sign
    }

    response = requests.post(url="https://yobit.net/tapi", headers=headers, data=values)
    return response.json()




def get_info_page():
    response = requests.get(url="https://yobit.net/api/3/info")

    with open("info.txt", "w") as file:
        file.write(response.text)

    return response.text




def get_ticker(coin1='usd', coin2='rur'):
    #response = requests.get(url="https://yobit.net/api/3/ticker/eth_btc-aum_b-404_btc?ignore_invalid=1")
    response = requests.get(url=f"https://yobit.net/api/3/ticker/{coin1}_{coin2}?ignore_invalid=1")
    with open("ticker.txt", "w") as file:
        file.write(response.text)

    return response.text

def get_depth(coin1="usd", coin2="rur", limit=250):
    response = requests.get(url=f"https://yobit.net/api/3/depth/{coin1}_{coin2}?limit={limit}&ignore_invalid=1")

    with open("depth.txt", "w") as file:
        file.write(response.text)

    bids = response.json()[f"{coin1}_rur"]["bids"]

    total_bids_amount = 0

    for item in bids:
        price = item[0]
        coin_amount = item[1]

        total_bids_amount += price * coin_amount

    return f"Total bids : {total_bids_amount} Rub"



def get_trades(coin1="usd", coin2="rur", limit=250):
    response = requests.get(url=f"https://yobit.net/api/3/trades/{coin1}_{coin2}?limit={limit}&ignore_invalid=1")

    with open("trades.txt", "w") as file:
        file.write(response.text)

    total_trade_ask = 0
    total_trade_bid = 0

    for item in response.json()[f"{coin1}_{coin2}"]:
        if item["type"] == "ask":
            total_trade_ask += item["price"] * item["amount"]
        else:
            total_trade_bid += item["price"] * item["amount"]

    info = f"[-] TOTAL {coin1} SELL: {round(total_trade_ask,2)} Rub\n[+] TOTAL {coin1} BUY: {round(total_trade_bid,2)} Rub"

    return info

def main():
    coin_name = input("Введите код валюты: ")
    #print(get_info())
    #print(get_ticker())
    #print(get_ticker(coin1="usd"))
    #print(get_depth(coin1="doge", limit=2000))
    #print(get_trades())
    #print(get_trades(coin1="xrp"))
    print(get_info())
    print(get_deposit(coin_name=coin_name))

if __name__ == '__main__':
    main()
